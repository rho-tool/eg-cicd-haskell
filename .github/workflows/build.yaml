name: Build

on:
  workflow_call:
    inputs:
      os-name:
        type: string
        required: true
      program:
        type: string
        required: true
      version:
        type: string
        required: true
      suffix:
        type: string
        required: false
    outputs:
      artefact_name:
        value: ${{jobs.build.outputs.artefact_name}}

permissions:
  contents: read

jobs:

  build:

    runs-on: ${{inputs.os-name}}
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Unpack YAML
      run: mv etc/*.yaml* .

    - name: Install ghcup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org\
        | BOOTSTRAP_HASKELL_YES=1\
          BOOTSTRAP_HASKELL_NONINTERACTIVE=1\
          BOOTSTRAP_HASKELL_GHC_VERSION=9.6.7\
          BOOTSTRAP_HASKELL_CABAL_VERSION=3.12.1.0\
          BOOTSTRAP_HASKELL_STACK_VERSION=3.3.1\
          BOOTSTRAP_HASKELL_INSTALL_HLS=2.10.0.0 sh
        echo 'PATH=$HOME/.ghcup/bin:$PATH' >> $GITHUB_ENV
        source $GITHUB_ENV
        ghcup --version || { echo "ghcup installation failed"; exit 1; }

    #- name: Install Stack
    #  uses: haskell-actions/setup@v2
    #  with:
    #    ghc-version: '9.4.7'
    #    stack-version: 'latest'
    #    enable-stack: true

    #- name: Set up Stack
    #  run: stack setup

    - name: Build dependencies
      run: stack build --only-dependencies

    - name: Build dependent
      run: stack build

    - name: Run tests
      run: stack test

    - name: Determine artefact
      id: determine-artefact
      shell: bash
      run: |
        PGM=${{inputs.program}}
        VSN=${{inputs.version}}
        SYS=$(uname -s  | tr [:upper:] [:lower:])
        MAC=$(uname -m)
        ART=$PGM-$VSN-$SYS-$MAC${{inputs.suffix}}
        BIN=$(stack path --local-install-root)/bin
        EXE=$PGM-exe${{inputs.suffix}}
        echo $PGM
        echo $VSN
        echo $SYS
        echo $MAC
        echo $ART
        echo $BIN
        echo $EXE
        # ls -l $BIN
        cp $BIN/$EXE $ART
        echo artefact_name=$ART >> $GITHUB_OUTPUT

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: ${{steps.determine-artefact.outputs.artefact_name}}
        path: ${{steps.determine-artefact.outputs.artefact_name}}
        if-no-files-found: error

    outputs:
      artefact_name: ${{steps.determine-artefact.outputs.artefact_name}}
