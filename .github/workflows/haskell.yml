name: EG CICD Haskell

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Unpack YAML
      run: mv etc/package.yaml . && mv etc/stack.yaml . && mv etc/stack.yaml.lock . && ls -al

    - uses: haskell-actions/setup@v2
      with:
        ghc-version: '9.4.7'
        stack-version: 'latest'
        enable-stack: true

    - name: Cache
      uses: actions/cache@v3
      env:
        cache-name: cache-stack
      with:
        path: |
          ~/.stack
          .stack-work
        key: ${{runner.os}}-stack-${{hashFiles ('stack.yaml', 'package.yaml')}}
        restore-keys: |
          ${{runner.os}}-stack-

    - name: Install dependencies
      run: stack setup && stack build --only-dependencies

    - name: Build project
      run: stack build

    - name: Run tests
      run: stack test

    - name: Locate executable
      run: |
        EXE=$(find $(stack path --local-install-root)/bin -type f -executable | head -n 1)
        PGM=$(yq .name package.yaml)
        VSN=$(yq .version package.yaml)
        KERN=$(uname -s)
        KERN=${KERN,}
        MACH=$(uname -m)
        ART=$PGM-$VSN-$KERN-$MACH
        cp $EXE $ART
        echo "ART=$ART" >> $GITHUB_ENV
        echo "VSN=$VSN" >> $GITHUB_ENV

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{env.ART}}
        path: ${{env.ART}}

    - name: Repack YAML
      run: mv stack.yaml.lock etc && mv stack.yaml etc && mv package.yaml etc

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{env.ART}}
        tag_name: ${{env.VSN}}
        draft: false
        prerelease: false
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}
